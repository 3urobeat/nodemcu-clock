; PlatformIO Project Configuration File
;
; See nodemcu-clock README for information about the settings you can customize below:
; https://github.com/HerrEurobeat/nodemcu-clock#readme
;
; See PlatformIO docs for further information regarding all PIO settings
; https://docs.platformio.org/page/projectconf.html


[common]
# ------------------------------------------------------------------------------
# You can change these settings
# ------------------------------------------------------------------------------

# Set port your ESP8266 is connected to
upload_speed = 921600		 ;; You can set a lower speed should your firmware upload fail
upload_port = /dev/ttyUSB0

# Change from release to debug to include more information and to disable optimizations
# More info: https://docs.platformio.org/en/latest/projectconf/build_configurations.html#build-configurations
build_type = release

# Uncomment values to enable extra compile settings
#	CLOCK_NOHTTPS:  Removes WiFiClientSecure from compiled image to save ~10% flash. When enabled, you cannot use any page that needs HTTPS APIs. Consult the README to see which pages need HTTPS.
# 	CLOCK_DEBUG:    Sends useful information through Serial related to memory usage etc.
#	CLOCK_IGNOREFS: Disables reading settings from internal filesystem and overwrites them with settings in config.cpp set at compile-time
extra_flags =
	;-D CLOCK_NOHTTPS
	-D CLOCK_DEBUG
	-D CLOCK_IGNOREFS


# ------------------------------------------------------------------------------
# Do not modify these settings
# ------------------------------------------------------------------------------
# Settings for all platforms
monitor_filters = 
	default
	;time					  ;; Must be disabled for exception decoder to work
	esp8266_exception_decoder
build_flags =
	-I config			  ;; Includes config directory which is outside the default pio dirs
	${common.extra_flags} ;; Includes extra_flags var from above
lib_deps = 
	paulstoffregen/Time@^1.6.1
	arduino-libraries/NTPClient@^3.1.0
	ottowinter/ESPAsyncWebServer-esphome@^3.0.0
	mrfaptastic/Json Streaming Parser 2@^2.1.0


# ESP8266
[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino
upload_speed = ${common.upload_speed}
upload_port = ${common.upload_port}
monitor_port = ${common.upload_port}
monitor_filters = ${common.monitor_filters}
build_type = ${common.build_type}
build_flags = ${common.build_flags}
lib_deps = 
	${common.lib_deps}
	vshymanskyy/Preferences@^2.0.0  ;; The ESP32 has a native prefs lib, the 8266 doesn't

# ESP32
[env:esp-wrover-kit]
platform = espressif32
board = esp-wrover-kit
board_build.partitions = no_ota.csv ;; PIO otherwise thinks it only has 1MB flash
framework = arduino
upload_speed = ${common.upload_speed}
upload_port = ${common.upload_port}
monitor_port = ${common.upload_port}
monitor_filters = ${common.monitor_filters}
build_type = ${common.build_type}
build_flags = ${common.build_flags}
lib_deps = ${common.lib_deps}